[project]
name = "utiplayground"
version = "0.1.0"
description = "AI-powered healthcare platform with lab-aware provider drafts"
requires-python = ">=3.12"
authors = [
    {name = "Terence Liu", email = "llebox@hotmail.com"}
]
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "openai>=1.88.0",
    "openai-agents>=0.0.19",
    "anthropic>=0.40.0",
    "fastmcp>=0.9.0",
    "google-cloud-firestore>=2.18.0",
    "google-cloud-pubsub>=2.25.0",
    "google-cloud-storage>=2.18.0",
    "google-cloud-logging>=3.11.0",
    "google-cloud-monitoring>=2.23.0",
    "google-cloud-trace>=1.14.0",
    "redis[hiredis]>=5.2.0",
    "asyncpg>=0.30.0",
    "sqlalchemy[asyncio]>=2.0.36",
    "alembic>=1.14.0",
    "mem0ai>=0.1.27",
    "httpx>=0.28.0",
    "structlog>=24.4.0",
    "prometheus-client>=0.21.0",
    "tenacity>=9.0.0",
    "python-multipart>=0.0.12",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "firebase-admin>=6.6.0",
    "google-cloud-aiplatform>=1.73.0",
    "pgvector>=0.3.6",
    "asyncio-mqtt>=0.16.2",
    "aiofiles>=24.1.0",
    "jinja2>=3.1.4",
    "python-dotenv>=1.0.1",
    "typing-extensions>=4.12.2",
    "rich>=13.7.0",
    "pypdf>=5.1.0",
    "pypdfium2>=4.29.0,<5.0.0",
    "pytesseract>=0.3.13",
    "pillow>=10.1.0",
    "weave>=0.51.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.0",
    "ruff>=0.7.4",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "httpx>=0.28.0",
    "faker>=33.1.0",
    "factory-boy>=3.3.1",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "F", 
    "W",
    "C90",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "AIR",
    "PERF",
    "FURB",
    "LOG",
    "RUF",
]
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    "D200", "D201", "D202", "D203", "D204", "D205", "D206", "D207", 
    "D208", "D209", "D210", "D211", "D212", "D213", "D214", "D215",
    "D300", "D301", "D400", "D401", "D402", "D403", "D404", "D405",
    "D406", "D407", "D408", "D409", "D410", "D411", "D412", "D413",
    "D414", "D415", "D416", "D417", "D418", "D419",
    "S104", "TD002", "TD003", "FIX002", "B008", "TRY300", "ARG001", 
    "ARG002", "BLE001", "PERF401", "E501", "ANN003", "ANN204", 
    "TRY003", "TRY002", "TRY301", "EM102", "F841", "PLW2901",
    "PLC0415", "TID252", "PLR2004", "RUF013", "W291", "TRY400",
    "ANN202", "ANN201", "G004", "F821", "EXE001", "PTH118", "PTH120",
    "W293", "PLR0913", "B007", "SIM102", "PERF102"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004", "ANN201", "ANN001", "ANN202", "SLF001"]
"src/*" = ["E501", "ANN003", "ANN204", "F841", "PLR2004"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mem0.*",
    "firebase_admin.*",
    "google.*",
    "langgraph.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "faker>=37.5.3",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
]

[project.scripts]
uti-mcp = "src.server:main"
uti-cli = "src.cli:main"
